# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
 

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Set Env Vars on Vercel Project
      uses: dkershner6/vercel-set-env-action@v1
      with:
        token: ${{ secrets.VERCEL_TOKEN }}
        projectName: trello-clone-backend
        envVariableKeys: FRONT_END_URL,JWT_KEY,MONGO_URL,SENDINBLUE_API_KEY,SENDER_EMAIL,GOOGLE_CLIENT_ID,GOOGLE_SECRET,CLOUDINARY_CLOUD_NAME,CLOUDINARY_API_KEY,CLOUDINARY_API_SECRET,CLOUDINARY_DEFAULT_FOLDER,CLOUDINARY_PRESET,APP_NAME
      env:
          FRONT_END_URL: http://localhost:3000
          TARGET_FRONT_END_URL: production
          TYPE_FRONT_END_URL: plain
          JWT_KEY: ${{ secrets.JWT_KEY }}
          TARGET_JWT_KEY: production
          TYPE_JWT_KEY: plain
          MONGO_URL: ${{ secrets.MONGO_URL }}
          TARGET_MONGO_URL: production
          TYPE_MONGO_URL: plain
          SENDINBLUE_API_KEY: ${{ secrets.SENDINBLUE_API_KEY }}
          TARGET_SENDINBLUE_API_KEY: production
          TYPE_SENDINBLUE_API_KEY: plain
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          TARGET_SENDER_EMAIL: production
          TYPE_SENDER_EMAIL: plain
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          TARGET_GOOGLE_CLIENT_ID: production
          TYPE_GOOGLE_CLIENT_ID: plain
          GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
          TARGET_GOOGLE_SECRET: production
          TYPE_GOOGLE_SECRET: plain
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          TARGET_CLOUDINARY_CLOUD_NAME: production
          TYPE_CLOUDINARY_CLOUD_NAME: plain
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          TARGET_CLOUDINARY_API_KEY: production
          TYPE_CLOUDINARY_API_KEY: plain
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          TARGET_CLOUDINARY_API_SECRET: production
          TYPE_CLOUDINARY_API_SECRET: plain
          CLOUDINARY_DEFAULT_FOLDER: ${{ secrets.CLOUDINARY_DEFAULT_FOLDER }}
          TARGET_CLOUDINARY_DEFAULT_FOLDER: production
          TYPE_CLOUDINARY_DEFAULT_FOLDER: plain
          CLOUDINARY_PRESET: ${{ secrets.CLOUDINARY_PRESET }}
          TARGET_CLOUDINARY_PRESET: production
          TYPE_CLOUDINARY_PRESET: plain
          APP_NAME: Rello
          TARGET_APP_NAME: production
          TYPE_APP_NAME: plain
     # deploy app to vercel
    - name: deploy site to vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_ORG_ID }} # Required
        vercel-org-id: ${{ secrets.ORG_ID}} #Required
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
        vercel-args: "--prod"
        envVariableKeys: ""
